

[ ] add a background "screen" with color/alpha to text overlay

[ ] add option to overflow screen edges instead of just letterbox
    -maybe allow letterbox/overflow in windowed mode too?


[ ] drag drop onto sys tray icon?


[ ] since slow seek on urls, the "slow" doubleclick to fullscreen feels pretty bad
    [ ] worse since removing real-time stopwatch for saving our seek position to "undo to"


[ ] add proper random lib


[ ] encapsulate submenu / menu [instance in ghoster class?]

[ ] proper render layer / api, eg drawTexturedQuad
    [ ] try swapping in directx to avoid opengl/nvidia/windows bug


bugs: 

[ ] flickering when resizing introduced after adding overlay
[ ] when resizing, black bars exist in the new space 
    (maybe render after resize, or always stretch render buffer to screen?)
[ ] black bar when loading new video is different size 
    (window resized before display buffer i guess)

[ ] intermittent repeat-frame loop? maybe after seeking?
    -happened in dutch and manups vids

[x] loaded vid using previous vid timestamp if none

[ ] loaded video using wrong aspect ratio?? happened with manups but can't repeat

[ ] resize before done loading, window disappears

[ ] intermittent progress bar not hiding when mouse is still


todo:

[ ] handle fps, timing etc correctly when no video loaded


[ ] narrow down what dlls we actually need?


[ ] playlist support
    [ ] drop in folder
    [ ] drop in text file list / string list
    [ ] yt playlist
    [ ] autoplay (yt+others?)
    [ ] view to-play list somehow
    [ ] re-arrange / shuffle / random


[ ] improve video resize quality (compare to vlc eg)
    [ ] start with variable-size ffmpeg to screen buffer?



[x] command line options
    [x] menu options
    [x] positioning/sizing options [add checkmark when done]
    [ ] option for just left/right/top/bottom docking individually ?

[/] overlay display: play/pause feedback, etc
    [x] basic single messages
    [ ] icon/bitmaps (esp play/pause)
    [x] multiple messages
    [x] display scrolling log?



[ ] needs a few abstraction cleanup passes
    [ ] menu windows
    [ ] wallpaper window?
    [ ] app/plat interface?
    [ ] app/plat inter thread communication
    [ ] a sort of message system for update loop communication? load video, seek, etc


[ ] decouple display from frames decoded so we can decode from network easier? 
    [ ] with caching
    [ ] and buffering

[ ] look into how ffmpeg dls videos -- cache anywhere?

[ ] need to dl a low quality version first or we'll lag on large files??
    (definite delay but maybe not correlated to vid size)





---low priority----


[ ] opacity doesn't seem to work in wallpaper mode, but not really wanted too badly anyway
    could maybe do something funny with workerW to get it to work, 
    since workerW is originally for fading between wallpapers

[/] extra bar on right of some vids
    [x] temp fix by using a constant-size buffer
    [ ] use same size as overlay buffer?

[/] lose transparency on full screen
    [x] temp workaround by keeping 1 pixel smaller than monitor size
    [ ] problem is we now have to be set topmost when fullscreen to get over the taskbar


[ ] more than one audio stream
[?] more than one video stream??
    [x] give us a message if we ever see these
    [ ] just get a big collection of different videos to test at some point


[/] window controls are laggy on second ghoster window
    this is starting to feel like an nvidia driver bug
    [x] .bat file workaround
    [ ] "launcher" exe workaround?


[/] seems like mem leak on loading files
    [ ] looks like small one still there
    [x] big one fixed


[ ] handle these example cases with CODEC_CAP_DELAY
https://www.youtube.com/watch?v=nUWur-T598s
https://www.youtube.com/watch?v=gZo1BLYcMJ4
https://www.youtube.com/watch?v=KH4NrUxcsYs
    [ ] check if there is any data or it's just the flag is set
    [ ] use the remaining data if there
    [ ] or replace with new send/receive api which i don't think needs a special case for this





---notes on window resize----

updating the size of the backbuffer
fixes our distorted text on long windows
but I don't see a complete solution yet
basically we have a few options

first is do we r_swap every wm_size call?
if we do, we'll flicker if we try to update the bb frequently
(maybe there is a solution to this?)
if not, we'll get resize black bars in the new space

second is do we update the bb as much as we can?
if we do, we can do it in the app loop or every wm_size call
  either way, we flicker if we also swap from the system thread (called OPTION 1)
  if we don't swap from system, we'll get black bars as prev mentioned
if we don't update the bb as much as we can, we'll get distortion
best way I've found to minimize the distortion is resize the bb on sizemoveexit
and to prevent extreme distortion when scaling up a small bb, set the bb huge when we sizemoveenter
we call this OPTION 2 in the comments

OPTION 3 is don't swap every wm_size call, and resize the bb every app loop
this has no distortion and no flicker, but we get resize black bars and it's pretty slow

we'll go with OPTION 2 for now until something better comes up




---consider-----

step forward and backwards by a single frame?

manual crop by resize borders but keeping window same? 
maybe with middle mouse button
and track with middle mouse, like a pdf or something

when playing url...
..d/l asyn high quality
..play low quality instantly, switching to high quality on the fly?

replace youtube-dl with homegrown/internal variant?

grown/shrink which side of window based on screen location when changing aspect ratio??

add icon to pause/play menu item

if ghost mode forced always on top, should it also be automatically disabled when leaving ghost mode?

if we pre-process the file in parallel to display, we could seek much faster on files with spaced out I-frames
(and especially urls)


write text on the image directly with ffmpeg?

low vid framerate (eg maybe if audio only),
things that we check each loop like if mouse leaves window will feel very slow
their responsiveness is basically frame rate dependent

kind of annoying...
if we are fullscreen ghost mode transparent and disable ghost mode, 
trying to click on the task bar will seek somewhere else in the video
maybe disabling ghost mode should always reset opacity and topmost??
and should it set our opacity much lower too? i guess not


possible for youtube-dl to not clsoe if process forced close at the wrong time?

in wallpaper mode check for clicks on our rect and open menu?
check for file drags somehow even?


---instructions-------

to load a file

pass path as argument
drag file onto window
drag url onto window
paste (ctrl+V) url or path from clipboard while window active
rclick menu, paste url or path
rclick menu, open file... ?



---notes---


debug print these cases--
PTS out of order
any b frames?
repeat_pict?


use avframe repeat_pict ?




fluid buffering----

[xxx        ] time playing
[.....      ] time buffered

two threads 
-1 getting video quickly as possible given what we have and time until we run out
-1 grabbing highest res frame avil for next frame, buffer if none avail


i/o loop
-fast, responsive
-no drops
-animate if waiting for data


d/l / decode loop
-get data asap, even if low qual
-improve qual asap
-ok to wait, esp if video playing, but w/in reason (timeout?)



---fun----

preview random frame when loading while paused

filters!
pixel shaders, eg splash on click
-switch on
-degauss

random a/v mashup

random video [maybe 'i'm feeling lucky' style]

green screen masking type functionality?

if no video, visualize audio

face detection googly eyes? no, that's taking it too far

automatic audio adjust starting volume??


