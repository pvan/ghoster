


[ ] needs a few abstraction cleanup passes


[ ] decouple display from frames decoded so we can decode from network easier.. 
    [ ] with caching
    [ ] and buffering

[x] definite sync issues when seeking youtube videos

[ ] look into how ffmpeg dls videos -- cache anywhere?

[ ] need to dl a low quality version first or we'll lag on large files??
    (definite delay but maybe not correlated to vid size)


[ ] overlay display, play/pause feedback, etc



[ ] add black bars when aspect ratio is locked and full screen



[x] split movie loading into sep thread to keep io responsive
[ ] split move loading into yet another thread so we can draw buffering animation

[ ] buffering / waiting animation



[ ] repeat toggle

[ ] keep new loaded video same window size (maybe resize to new aspect ratio)




[ ] snap to screen edges


[ ] icon

[ ] taskbar


[ ] more than one audio stream
[?] more than one video stream??



[ ] volume! 




---consider-----

step forward and backwards by a single frame?


manual crop by resize borders but keeping window same? 
maybe with middle mouse button


when playing url...
..d/l asyn high quality
..play low quality instantly, switching to high quality on the fly?


replace youtube-dl with homegrown/internal variant?

grown/shrink which side of window based on screen location when changing aspect ratio??

option to reset to native video resolution? [doesn't seem actually useful]


---instructions-------

to load a file

pass path as argument
drag file onto window
drag url onto window
paste (ctrl+V) url or path from clipboard while window active
rclick menu, paste url or path
rclick menu, open file... ?



---notes---


debug print these cases--
PTS out of order
any b frames?
repeat_pict?


use avframe repeat_pict ?


only pause when waiting for next frame?



cross check audio clock 
w/ pts of data buffer sent to sdl
+ sdl delay estimate (2x buf length?)

usually no change
just a failsafe check






fluid buffering----

[xxx        ] time playing
[.....      ] time buffered

two threads 
-1 getting video quickly as possible given what we have and time until we run out
-1 grabbing highest res frame avil for next frame, buffer if none avail


i/o loop
-fast, responsive
-no drops
-animate if waiting for data


d/l / decode loop
-get data asap, even if low qual
-improve qual asap
-ok to wait, esp if video playing, but w/in reason (timeout?)



