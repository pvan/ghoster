

before done enough for this dev cycle:

[ ] cleanup pass
    [ ] utils
    [ ] others
    [ ] check todos

[x] test command line args on cmd line, not just via batch file
[ ] test in batch file
[x] movie not loading when launched from cmd (from folder works fine)

[ ] has msg loop gotten laggy? test with older version if needed

[x] loading new movie in wallpaper mode doesn't resize [could be improved still]



as it comes up / later:

[ ] refactor window resizing?
    [ ] add hwnd.h function for it
    [ ] add glass function for it, that resizes wallpaper hwnd as needed
    [ ] use when loading, setting fullscreen, setting aspect ratio

[x] L click on sys tray while in wallpaper mode, pause video

[ ] intermittent progress bar not hiding when mouse is still [need last mouse move ms displayed]

[ ] cleanup loading files when fullscreen... the restore->fullscreenagain loop is visible
[ ] also menu gets closed if it's open

[ ] test the new timeout on loading urls if connection is flaky

[ ] add proper random lib

[ ] improve video resize quality (compare to vlc eg)
    [x] start with variable-size ffmpeg to screen buffer?
    [ ] sharpen filter?


bugs inherent to rendering on the sys msg loop thread:
[ ] click and drag a little bit, then hold, freezes render 
    (impossible to avoid with sys render i think)



----bigger projects----


--playlist support--

[ ] playlist support
    [ ] drop in folder
    [ ] drop in text file list / string list
    [ ] yt playlist
    [ ] autoplay (yt+others?)
    [ ] view to-play list somehow
    [ ] re-arrange / shuffle / random


--CODEC_CAP_DELAY thing--

[ ] handle these example cases with CODEC_CAP_DELAY
https://www.youtube.com/watch?v=nUWur-T598s
https://www.youtube.com/watch?v=gZo1BLYcMJ4
https://www.youtube.com/watch?v=KH4NrUxcsYs
    [ ] check if there is any data or it's just the flag is set
    [ ] use the remaining data if there
    [ ] or replace with new send/receive api which i don't think needs a special case for this?

[ ] intermittent repeat-frame loop? maybe after seeking?
    -happened in dutch and manups and brick.. is it maybe a CODEC_CAP_DELAY thing?


--code cleanup--
[ ] api/naming improvements
    [ ] window class "glass"
    [ ] movie decoder "projector"

[ ] file conventions
    [ ] menu
    [ ] sdl
    [ ] etc

[ ] limited to singleton usage
    [ ] glass
    [ ] menu
    [ ] others?


--dl buffering--
[ ] dl low qual first (faster seeking / faster start)
[ ] dl multiple quality versions in background? (adaptively improve quality?)
[ ] dl entire file in background? (faster seeking / what about very large files?)


--rendering improvements--
[ ] batch quads for one draw call (fix the not-too-terrible flicker on resize with debug text?)



*/



---low priority----


[ ] opacity doesn't seem to work in wallpaper mode, but not really wanted too badly anyway
    could maybe do something funny with workerW to get it to work, 
    since workerW is originally for fading between wallpapers

[/] lose transparency on full screen
    [x] temp workaround by keeping 1 pixel smaller than monitor size
    [/] problem is we now have to be set topmost when fullscreen to get over the taskbar
        [x] set and unset when toggling fullscreen
        [ ] "back way" into fullscreen maybe iffy.. eg wallpaper->fullscreen->nonwallpaper

[ ] more than one audio stream
[?] more than one video stream??
    [x] give us a message if we ever see these
    [ ] just get a big collection of different videos to test at some point

[ ] check for small mem leaks
    [ ] on loading
    [ ] on continuous run 

[ ] drag drop onto sys tray icon?
    see https://stackoverflow.com/questions/2742954/drag-and-drop-on-notifyicon-in-tray-in-c-sharp/4029483#4029483


---consider-----

more quality setting options?

look into DASH

don't let failed load attempt cancel a previous but good load attempt?

add support for static images?

overlay display: icon/bitmaps (esp play/pause)?
add icon to pause/play menu item

step forward and backwards by a single frame?

manual crop by resize borders but keeping window same? 
maybe with middle mouse button
and track with middle mouse, like a pdf or something

when playing url...
..d/l asyn high quality
..play low quality instantly, switching to high quality on the fly?

replace youtube-dl with homegrown/internal variant?

grown/shrink which side of window based on screen location when changing aspect ratio??

if ghost mode forced always on top, should it also be automatically disabled when leaving ghost mode?

if we pre-process the file in parallel to display, we could seek much faster on files with spaced out I-frames
(and especially urls)


low vid framerate (eg maybe if audio only),
things that we check each loop like if mouse leaves window will feel very slow
their responsiveness is basically frame rate dependent
always update at 60+ and just "render" at video fps?
[this should be ok now that we've taken "update" things out of the decoder]
[queued messages for decoder will still only be processed as fast as the decoder loop, though]


kind of annoying...
if we are fullscreen ghost mode transparent and disable ghost mode, 
trying to click on the task bar will seek somewhere else in the video
maybe disabling ghost mode should always reset opacity and topmost??
and should it set our opacity much lower too? i guess not


it's possible for youtube-dl to not close if app is forced closed at the wrong time [small target tho]

in wallpaper mode check for clicks on our rect and open menu?
check for file drags somehow even?


---instructions-------

to load a file

pass path as argument
drag file onto window
drag url onto window
paste (ctrl+V) url or path from clipboard while window active
rclick menu, paste url or path
rclick menu, open file... ?



---notes---


debug print these cases--
PTS out of order
any b frames?
repeat_pict?


use avframe repeat_pict ?




fluid buffering----

[xxx        ] time playing
[.....      ] time buffered

two threads 
-1 getting video quickly as possible given what we have and time until we run out
-1 grabbing highest res frame avil for next frame, buffer if none avail


i/o loop
-fast, responsive
-no drops
-animate if waiting for data


d/l / decode loop
-get data asap, even if low qual
-improve qual asap
-ok to wait, esp if video playing, but w/in reason (timeout?)



---fun----

preview random frame when loading while paused

filters!
pixel shaders, eg splash on click
-switch on
-degauss

random a/v mashup

random video [maybe 'i'm feeling lucky' style]

green screen masking type functionality?

if no video, visualize audio [or option to overlay visualization anyway]

face detection googly eyes? no, that's taking it too far

automatic audio adjust starting volume??


